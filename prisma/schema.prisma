datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  User
  Admin

  @@map("role")
}

enum Language {
  C
  Go
  Cpp
  Java
  Rust
  Python
  JavaScript
  TypeScript
}

enum SubmissionStatus {
  Pending // Pending/Waiting
  Compiling
  Running // Running/Judging
  Accepted
  CompileError
  WrongAnswer
  TimeLimitExceeded
  RunningError
  MemoryLimitExceeded
  PresentationError
  OutputLimitExceeded
  UnknownError
}

model User {
  id          Int          @id @default(autoincrement())
  role        Role         @default(User)
  phone       String?      @unique
  email       String?      @unique
  handle      String?      @unique
  password    String?
  createdAt   DateTime     @default(now())
  registerIp  String?      @db.Inet
  // relation
  submissions Submission[]
  problems    Problem[]
  testCases   TestCase[]
}

model Problem {
  id            Int      @id @default(autoincrement())
  title         String
  description   String   @db.Text
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  createdUserId Int

  // relation
  createdUser User @relation(fields: [createdUserId], references: [id])

  testcases   TestCase[]
  submissions Submission[]

  @@map("problem")
}

model TestCase {
  id Int @id @default(autoincrement())

  problemId Int
  isHidden  Boolean @default(false)

  input  String @db.Text
  output String @db.Text

  createdUserId Int

  // relation
  problem     Problem @relation(fields: [problemId], references: [id])
  createdUser User    @relation(fields: [createdUserId], references: [id])

  @@map("testcase")
}

model Submission {
  id        Int              @id @default(autoincrement())
  code      String           @db.Text
  status    SubmissionStatus @default(Pending)
  userId    Int
  problemId Int
  language  Language
  createdAt DateTime         @default(now())

  // relation
  user    User    @relation(fields: [userId], references: [id])
  problem Problem @relation(fields: [problemId], references: [id])

  @@map("submission")
}
