// Prisma only use for schema management
// @updateAt will not automaticaly update beside prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN

  @@map("role")
}

enum Language {
  C
  GO
  CPP
  RUST
  PYTHON

  @@map("language")
}

enum AnswerStatus {
  Pending // Pending/Waiting
  Compiling
  Running // Running/Judging
  Accepted
  CompileError
  WrongAnswer
  TimeLimitExceeded
  RunningError
  MemoryLimitExceeded
  PresentationError
  OutputLimitExceeded
  UnknownError

  @@map("answer_status")
}

// 用户
model User {
  id         Int      @id @default(autoincrement())
  role       Role     @default(USER)
  email      String   @unique
  handle     String?  @unique
  password   String
  created_at DateTime @default(now())

  // relation
  solutions Solution[]

  @@map("user")
}

// 问题
model Problem {
  id          Int        @id @default(autoincrement())
  title       String
  description String     @db.Text
  created_at  DateTime   @default(now())
  updated_at  DateTime   @default(now()) @updatedAt
  TestCase    TestCase[]

  @@map("problem")
}

// 测试用例
model TestCase {
  id Int @id @default(autoincrement())

  problem_id Int
  is_hidden  Boolean @default(false)

  input  String @db.Text
  output String @db.Text

  // relation
  problem Problem @relation(fields: [problem_id], references: [id])

  @@map("test_case")
}

model Solution {
  id         Int          @id @default(autoincrement())
  code       String       @db.Text
  status     AnswerStatus @default(Pending)
  user_id    Int
  language   Language
  created_at DateTime     @default(now())

  // relation
  user User @relation(fields: [user_id], references: [id])

  @@map("solution")
}
